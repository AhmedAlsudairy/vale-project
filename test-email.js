// Quick email test script for Vale Equipment Management System
// Run with: node test-email.js

require('dotenv').config()

async function testEmailSystem() {
  console.log('üß™ Testing Vale Equipment Email System...\n')
  
  // Test environment variables
  console.log('üìß Checking environment variables:')
  console.log(`GMAIL_USER: ${process.env.GMAIL_USER ? '‚úÖ Set' : '‚ùå Missing'}`)
  console.log(`GMAIL_APP_PASSWORD: ${process.env.GMAIL_APP_PASSWORD ? '‚úÖ Set' : '‚ùå Missing'}`)
  console.log(`MAINTENANCE_EMAIL_RECIPIENTS: ${process.env.MAINTENANCE_EMAIL_RECIPIENTS || '‚ùå Missing'}`)
  
  if (!process.env.GMAIL_USER || !process.env.GMAIL_APP_PASSWORD) {
    console.log('\n‚ùå Missing required Gmail configuration. Please check your .env file.')
    return
  }
  
  try {
    // Import after env check
    const { getRecipients, sendEmail } = await import('./lib/email.js')
    const { getAllValeRecipients } = await import('./lib/email-recipients.js')
    
    console.log('\nüìã Testing recipient configuration:')
    const recipients = getRecipients('general')
    console.log(`Recipients: ${recipients.join(', ')}`)
    
    const allRecipients = getAllValeRecipients()
    console.log(`All Vale recipients: ${allRecipients.join(', ')}`)
    
    console.log('\nüì§ Sending test email...')
    
    const testData = {
      motorNo: 'TEST-MOTOR-001',
      inspectionDate: new Date().toISOString().split('T')[0],
      doneBy: 'Email Test System',
      equipmentName: 'Test Motor for Email System'
    }
    
    const result = await sendEmail({
      to: recipients,
      subject: '‚úÖ Vale Equipment Management System - Email Test',
      html: `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
          <h2 style="color: #1F4E79;">üß™ Email System Test</h2>
          
          <div style="background: #e8f6f3; padding: 20px; border-radius: 8px; margin: 20px 0;">
            <h3 style="color: #16A085; margin-top: 0;">‚úÖ Email System Working</h3>
            <p>This is a test email from the Vale Equipment Management System.</p>
            <p><strong>Test Time:</strong> ${new Date().toLocaleString()}</p>
            <p><strong>System Status:</strong> Email notifications are functioning correctly</p>
          </div>

          <div style="background: #f8f9fa; padding: 20px; border-radius: 8px; margin: 20px 0;">
            <h3 style="color: #2C3E50; margin-top: 0;">Test Data</h3>
            <p><strong>Motor No:</strong> ${testData.motorNo}</p>
            <p><strong>Date:</strong> ${testData.inspectionDate}</p>
            <p><strong>Done By:</strong> ${testData.doneBy}</p>
            <p><strong>Equipment:</strong> ${testData.equipmentName}</p>
          </div>

          <div style="background: #f4f4f4; padding: 15px; border-radius: 8px; margin: 20px 0; text-align: center;">
            <p style="margin: 0; color: #666;">
              This email was automatically generated by Vale Equipment Management System
            </p>
          </div>
        </div>
      `,
      text: `
Vale Equipment Management System - Email Test

‚úÖ Email System Working

This is a test email from the Vale Equipment Management System.
Test Time: ${new Date().toLocaleString()}
System Status: Email notifications are functioning correctly

Test Data:
- Motor No: ${testData.motorNo}
- Date: ${testData.inspectionDate}
- Done By: ${testData.doneBy}
- Equipment: ${testData.equipmentName}

This email was automatically generated by Vale Equipment Management System
      `
    })
    
    if (result.success) {
      console.log('‚úÖ Test email sent successfully!')
      console.log(`Message ID: ${result.result.messageId}`)
      console.log(`Recipients: ${recipients.join(', ')}`)
    } else {
      console.log('‚ùå Test email failed:', result.error)
    }
    
  } catch (error) {
    console.error('‚ùå Email test failed:', error.message)
  }
}

// Run the test
testEmailSystem()
